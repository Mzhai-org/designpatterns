server.port=8087

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/spring_cloud?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

mybatis.type-aliases-package=com.zs.springclouduser.bo
mybatis.mapper-locations=classpath:mapping/*.xml
#mybatis.config-location=classpath:config/mybatis-config.xml
logging.level.com.zs.mapper=debug

#for actuator/info show
info.app.name=@project.artifactId@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.source=@java.version@
info.app.java.target=@java.version@

#指定应用在eureka server中的名字
spring.application.name=microservice-provider-user-auth
#与eureka server 交互的地址(服务的注册地址)
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# 将服务注册的Eureka Server集群，其实指定集群中一个地址就可以因为Server节点会同步数据，
# 但是因为节点间同步数据不是即时同步，所以最好指定所有节点，应用启动时向所有Eureka Server节点注册应用数据
# 需要注意的时，指定的多个Eureka Server地址必须时集群中的节点（已经互相注册的Eureka Server），如果包含其他Eureka Server的注册地址，
# 会出现一方主动下线（Cancelled instance）的情况，Eureka Server会主动放弃已经在其他中心中注册的应用数据。
#eureka.client.service-url.defaultZone=http://peer1:8762/eureka/,http://peer2:8763/eureka/

#表示将自己的ip注册到eureka server，默认值为false，表示注册微服务所在操作系统的hostname到eureka server
eureka.instance.prefer-ip-address=true
#自定义元数据信息
eureka.instance.metadata-map.myMyetaData=testMeta